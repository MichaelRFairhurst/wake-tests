#>
# Source Code for the Original Compiler for the
# Programming Language Wake
#
# AssignmentsTest.wk
#
# Licensed under the MIT license
# See LICENSE.TXT for details
#
# Author: Michael Fairhurst
# Revised By:
#
##
module wktest;

import wunit.Asserts;

@TestClass
every AssignmentsTest is:

	@Test
	testTypeInferenceAssignment(Asserts) {
		var i = 5;
		i = 0;
		Asserts.that(i)Equals(0);
		i = 1;
	}

	@Test
	testPlusEquals(Asserts) {
		var Int = 5;
		Int += 0;
		Asserts.that(Int)Equals(5);
		Int += 1;
		Asserts.that(Int)Equals(6);
		Int += 5;
		Asserts.that(Int)Equals(11);
	}

	@Test
	testMinusEquals(Asserts) {
		var Int = 5;
		Int -= 0;
		Asserts.that(Int)Equals(5);
		Int -= 1;
		Asserts.that(Int)Equals(4);
		Int -= 4;
		Asserts.that(Int)Equals(0);
	}

	@Test
	testTimesEquals(Asserts) {
		var Int = 5;
		Int *= 1;
		Asserts.that(Int)Equals(5);
		Int *= 5;
		Asserts.that(Int)Equals(25);
		Int *= 0;
		Asserts.that(Int)Equals(0);
	}

	@Test
	testDivideEquals(Asserts) {
		var Num = 25;
		Num /= 5;
		Asserts.that(Num)Equals(5.0);
		Num /= 1;
		Asserts.that(Num)Equals(5.0);
		Num /= 5;
		Asserts.that(Num)Equals(1.0);
	}

	@Test
	testUsingAssigmentReturnValues(Asserts) {
		var Int = 5;
		if((Int := 1) != 1) {
			Asserts.fail("Not equal to one after being set in a subexpression");
		}

		Asserts.that(Int)Equals(1);
		Asserts.that(Int := 4)Equals(4);
	}
